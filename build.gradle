apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'build-announcements'
apply plugin: 'maven'
apply plugin: 'ivy-publish'

rootProject.name = "Painter"
sourceCompatibility = 1.7
version = '0.0.1'
group = "com.archivesmc.painter"

repositories {
    flatDir {
        // dirs '../lib', 'lib'
        dirs 'lib'
    }
    // Bukkit
    maven {
        url 'http://repo.bukkit.org/content/groups/public/'
    }

    // Vault
    maven {
        url 'http://nexus.theyeticave.net/content/repositories/pub_releases/'
    }
    // Prism
//    maven {
//        // Blocked by most corporate (read: crap) firewalls
//        url 'http://dhmc.us:8081/nexus/content/repositories/public/'
//    }
    // LogBlock
    maven {
        url 'http://repo.md-5.net/content/repositories/public/'
    }
    // WorldEdit (for LogBlock)
    maven {
        url 'http://maven.sk89q.com/repo/'
    }
}

jar {
    from sourceSets.main.allJava
    archiveName = "Painter-${version}.jar"
}

artifacts {
    archives jar
    name = "Painter"
}

uploadArchives {
    repositories {
        ivy {
            url "file://localhost/var/www/gserv/cherry/repos/ivy/"
        }
        mavenDeployer {
            pom.artifactId = "Painter"
            repository(url: "file://localhost/var/www/gserv/cherry/repos/maven/")
        }
    }
}

// Create lib folder
def libDir = new File('lib')
libDir.mkdirs()

// Download prism (lol)

def f = new File('lib/prism-2.0.2.jar')
if (!f.exists()) {
    logger.info('Downloading dependency: prism-2.0.2.jar')
    new URL('http://dhmc.us:8081/nexus/content/repositories/public/me/botsko/prism/2.0.2/prism-2.0.2.jar').withInputStream{ i -> f.withOutputStream{ it << i }}
} else {
    logger.info('Dependency already exists: prism-2.0.2.jar')
}

// Download CoreProtect as well

def g = new File('lib/CoreProtect-2.0.9.jar') // Notice I used a dash here instead of an underscore
if (!g.exists()) {
    logger.info('Downloading dependency: CoreProtect-2.0.9.jar')
    new URL('http://dev.bukkit.org/media/files/775/489/CoreProtect_2.0.9.jar').withInputStream{ i -> g.withOutputStream{ it << i }}
} else {
    logger.info('Dependency already exists: CoreProtect-2.0.9.jar')
}

// Download HawkEye

def h = new File('lib/HawkEye-1.6.0.jar') // Devs don't include the version for some reason
if (!h.exists()) {
    logger.info('Downloading dependency: HawkEye-1.6.0.jar')
    new URL('http://dev.bukkit.org/media/files/731/750/HawkEye.jar').withInputStream{ i -> h.withOutputStream{ it << i }}
} else {
    logger.info('Dependency already exists: HawkEye-1.6.0.jar')
}

dependencies {
    compile 'net.coreprotect:CoreProtect:2.0.9'
    compile 'de.diddiz:logblock:dev-SNAPSHOT'
    compile 'me.botsko:prism:2.0.2'
    compile 'net.milkbowl.vault:Vault:1.4.1'
    compile 'org.bukkit:bukkit:1.7.9-R0.2'
    compile 'uk.co.oliwali:HawkEye:1.6.0'
}